import pandas as pd
import numpy as np

def create_combined_table():
    """
    Создает объединенную таблицу из данных Image 2 и Image 3
    """
    
    # Данные из Image 2 (df, F value, p)
    image2_data = {
        'sensor': ['Fp1', 'Fp1', 'Fz', 'Fz', 'F3', 'F3', 'F7', 'F7', 'FC5', 'FC5', 'FC1', 'FC1', 'C3', 'C3', 'T7', 'T7', 'CP5', 'CP5', 'CP1', 'CP1', 'Pz', 'Pz', 'P3', 'P3', 'P7', 'P7', 'O1', 'O1', 'Oz', 'Oz', 'O2', 'O2', 'P4', 'P4', 'P8', 'P8', 'CP6', 'CP6', 'CP2', 'CP2', 'Cz', 'Cz', 'C4', 'C4', 'T8', 'T8', 'FC6', 'FC6', 'FC2', 'FC2', 'F4', 'F4', 'F8', 'F8', 'Fp2', 'Fp2'],
        'condition': ['geometry', 'geometry:color'] * 28,
        'NumDF': [1, 4] * 28,
        'DenDF': [204.26608, 204.47099, 205.35500, 204.60128, 203.67598, 203.17018, 201.11248, 201.12468, 205.24700, 205.26275, 205.32961, 205.38574, 206.41647, 206.44837, 203.20782, 203.31570, 207.15948, 207.84478, 206.52323, 206.82861, 207.43540, 207.79312, 206.54517, 206.99948, 205.56409, 205.89198, 205.69250, 206.64856, 206.00295, 205.88676, 205.93561, 204.41056, 204.73300, 205.47705, 205.95783, 206.06761, 205.50667, 203.87199, 203.95702, 204.53816, 205.13254, 205.19585, 206.89372, 206.76151, 207.07550, 206.31248, 206.39242, 206.73556, 205.06621, 205.13791, 205.66100, 203.05199, 203.06201, 203.16117, 204.03934, 204.05775],
        'F_value': [6.9585589, 0.9974178, 5.6678602, 1.0714235, 1.9210843, 1.1573761, 8.7249300, 0.9553541, 0.1721630, 0.1365868, 11.081693, 0.1309113, 9.0726152, 1.3989605, 0.6705678, 0.6325492, 1.8810143, 1.7595224, 8.9535390, 2.3339208, 4.9039317, 3.1261716, 7.8041866, 3.2464201, 9.1242885, 2.0311309, 3.9000009, 0.3654276, 2.3640241, 2.3050603, 0.2083166, 1.9873568, 1.5361961, 2.0601333, 2.8395782, 1.0487873, 2.7751347, 1.4660145, 0.3307307, 2.2816336, 7.3924729, 0.3784009, 2.2977692, 8.1214535, 0.4424336, 2.4019518, 0.9499991, 0.4729556, 5.1418423, 0.5397387, 0.3581675, 5.0960121, 0.2600772, 0.3977785, 5.0453205, 0.5042116],
        'p_value': [0.0089412, 0.4100139, 0.0181564, 0.8729911, 0.1672527, 0.3308476, 0.0035129, 0.4331366, 0.6786299, 0.9598524, 0.0010393, 0.8432104, 0.0029188, 0.1574081, 0.4131066, 0.6398241, 0.1717023, 0.1385026, 0.0031944, 0.0568710, 0.0278841, 0.0159182, 0.0057027, 0.0130903, 0.0028423, 0.0913292, 0.0493644, 0.8330688, 0.0524237, 0.1301560, 0.9336109, 0.0977557, 0.2166037, 0.0873155, 0.0934829, 0.3830873, 0.0280225, 0.0425312, 0.8571032, 0.0617930, 0.0063387, 0.8239144, 0.0602887, 0.0046845, 0.7486236, 0.0461952, 0.0011096, 0.7555592, 0.0243982, 0.7067056, 0.6737270, 0.0250451, 0.9032460, 0.4152362, 0.0257641, 0.7326782]
    }
    
    # Данные FDR из Image 3
    fdr_data = {
        'Fp1': [0.019341553484, 0.484166666666],
        'Fz': [0.9954518518, 0.999545185185],
        'F3': [0.99545185185, 0.18237333333],
        'F7': [0.01404, 0.99545185185],
        'FC5': [0.6786, 0.99545185185],
        'FC1': [0.01036, 0.99545185185],
        'C3': [0.01382, 0.99545185185],
        'T7': [0.99545185185, 0.999230769231],
        'CP5': [0.19264, 0.99545185185],
        'CP1': [0.0133, 0.99545185185],
        'Pz': [0.0434, 0.99545185185],
        'P3': [0.01588666666, 0.18237333333],
        'P7': [0.9967, 0.018636666666],
        'O1': [0.06916, 0.99545185185],
        'Oz': [0.15856943478, 0.99545185185],
        'O2': [0.23326153846, 0.18237333333],
        'P4': [0.124666666666, 0.99545185185],
        'P8': [0.06269517394, 0.99545185185],
        'CP6': [0.18237333333, 0.018636666666],
        'CP2': [0.99545185185, 0.18237333333],
        'Cz': [0.01036, 0.99545185185],
        'C4': [0.0424941176471, 0.99545185185],
        'T8': [0.0424941176471, 0.484166666666],
        'FC6': [0.99545185185, 0.7442],
        'FC2': [0.01036, 0.99545185185],
        'F4': [0.1412727272727, 0.99545185185],
        'F8': [0.01445, 0.999215185185],
        'Fp2': [0.0158666666666, 0.18237333333]
    }
    
    # Создаем результирующую таблицу
    result_data = []
    
    # Обрабатываем каждый сенсор
    for sensor in fdr_data.keys():
        # Находим данные для geometry (первая строка каждого сенсора)
        geom_idx = [i for i, s in enumerate(image2_data['sensor']) if s == sensor and image2_data['condition'][i] == 'geometry']
        if geom_idx:
            idx = geom_idx[0]
            result_data.append({
                'sensor': sensor,
                'rm': 'geometry',
                'NumDF': image2_data['NumDF'][idx],
                'DenDF': image2_data['DenDF'][idx],
                'F_value': image2_data['F_value'][idx],
                'Pr(>F)': image2_data['p_value'][idx],
                'p_value': image2_data['p_value'][idx],
                'FDR': fdr_data[sensor][0]  # Первое значение FDR для geometry
            })
        
        # Находим данные для geometry:color (вторая строка каждого сенсора, если есть)
        geom_color_idx = [i for i, s in enumerate(image2_data['sensor']) if s == sensor and image2_data['condition'][i] == 'geometry:color']
        if geom_color_idx:
            idx = geom_color_idx[0]
            result_data.append({
                'sensor': sensor,
                'rm': 'geometry:color',
                'NumDF': image2_data['NumDF'][idx],
                'DenDF': image2_data['DenDF'][idx],
                'F_value': image2_data['F_value'][idx],
                'Pr(>F)': image2_data['p_value'][idx],
                'p_value': image2_data['p_value'][idx],
                'FDR': fdr_data[sensor][1] if len(fdr_data[sensor]) > 1 else None  # Второе значение FDR для geometry:color
            })
    
    # Создаем DataFrame
    df_result = pd.DataFrame(result_data)
    
    # Сортируем по sensor и rm для лучшего порядка
    df_result = df_result.sort_values(['sensor', 'rm'])
    
    # Экспортируем в Excel
    output_file = 'combined_sensor_data.xlsx'
    df_result.to_excel(output_file, index=False, engine='openpyxl')
    
    print(f"Таблица успешно создана и сохранена в файл: {output_file}")
    print("\nПревью данных:")
    print(df_result.head(10))
    print(f"\nВсего строк: {len(df_result)}")
    
    return df_result, output_file

if __name__ == "__main__":
    df, filename = create_combined_table()